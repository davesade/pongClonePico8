pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- main

function _update60()
 hrac.update(hrac1)
 hrac.update(hrac2)
 mic.update(mic)
 kurt.kolize()
 kurt.score()
end

function _draw()
 cls(13)
 kurt.draw()
 mic.draw()
 hrac.draw(hrac1)
 hrac.draw(hrac2)
end
-->8
-- hraci

hrac={}
hrac.sirka=20
hrac.tloustka=3
hrac.barva=7

hrac1={}
hrac2={}

hrac1.x=3+hrac.tloustka
hrac1.y=64-hrac.sirka/2
hrac1.score = 0
hrac1.id = 0

hrac2.x=125-hrac.tloustka
hrac2.y=64-hrac.sirka/2
hrac2.score = 0
hrac2.id = 1

function hrac.draw(h)
 rectfill(h.x,h.y,h.x+hrac.tloustka,h.y+hrac.sirka, hrac.barva)
end

function hrac.update(h)
 if btn(⬆️,h.id) then
  if h.y>0 then
   h.y-=1
  end
 end
 if btn(⬇️,h.id) then
  if h.y<128-hrac.sirka then
   h.y+=1
  end
 end
end
-->8
-- kurt

kurt={}

function kurt.draw()
 print(hrac1.score, 44,5,7)
 print(hrac2.score, 84,5,7)
 local i = 0
 while i < 10 do
  rectfill(63,15*i,65,15*i+8,7)
  i+= 1
 end
end

function kurt.kolize()
 -- steny
 if mic.y < 0+mic.prumer or mic.y+mic.prumer > 128 then
  sfx(0)
  mic.vektor[2]=-mic.vektor[2]
 end
 -- hrac1
 if mic.x<hrac1.x+hrac.tloustka+mic.prumer then
  if mic.y > hrac1.y then
   if mic.y < hrac1.y + hrac.sirka then
    sfx(2)
    mic.vektor[1]=-mic.vektor[1]+0.1
    boddoteku = hrac1.y+(hrac.sirka/2)-mic.y
    normalizace = boddoteku/hrac.sirka/2
    mic.vektor[2]=-normalizace
   end
  end
 end
 -- hrac2
  if mic.x>hrac2.x-hrac.tloustka-mic.prumer+1 then
  if mic.y > hrac2.y then
   if mic.y < hrac2.y + hrac.sirka then
    sfx(2)
    mic.vektor[1]=-mic.vektor[1]-0.1
    boddoteku = hrac2.y+(hrac.sirka/2)-mic.y
    normalizace = boddoteku/hrac.sirka/2
    mic.vektor[2]=-normalizace
   end
  end
 end
end

function kurt.score()
 if mic.x<0 then
  hrac2.score+=1
  sfx(1)
  wait(120)
  mic.vektor[1]=-1
  mic.vektor[2]=rnd(0.5)
  kurt.reset()
 end
 if mic.x>128 then
  hrac1.score+=1
  sfx(1)
  wait(120)
  mic.vektor[1]=1
  mic.vektor[2]=rnd(0.5)
  kurt.reset()
 end
end

function kurt.reset()
 mic.x,mic.y=64,64
 hrac1.x=3+hrac.tloustka
 hrac1.y=64-hrac.sirka/2
 hrac2.x=125-hrac.tloustka
 hrac2.y=64-hrac.sirka/2
end

function wait(n)
 while n > 0 do
  flip()
  n -= 1
 end
end
-->8
-- mic

mic = {}

mic.x=64
mic.y=64
mic.prumer=3
mic.barva=10
mic.vektor = {-1,rnd(0.5)}

function mic.draw()
 circfill(mic.x,mic.y,mic.prumer,mic.barva)
end

function mic.update(m)
 m.x+=m.vektor[1]
 m.y+=m.vektor[2]
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100002505025050250501e0501e0501d0301d0201d020150101e01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000b00001f2501f2501f2501f2501f2501f2501f25000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002a3502a3502a3502a35000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
